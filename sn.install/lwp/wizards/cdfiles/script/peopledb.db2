CREATE DATABASE PEOPLEDB USING CODESET UTF-8 TERRITORY US;

CONNECT TO PEOPLEDB;

------------------------------------
-- DDL Statements for BUFFERPOOLS --
------------------------------------
 
CREATE BUFFERPOOL "BPOOL4K" SIZE AUTOMATIC PAGESIZE 4096 ;
CREATE BUFFERPOOL "BPOOL32K" SIZE AUTOMATIC PAGESIZE 32768 ;

CONNECT TO PEOPLEDB;

------------------------------------
-- DDL Statements for TABLESPACES --
------------------------------------


CREATE LARGE TABLESPACE USERSPACE4K IN DATABASE PARTITION GROUP IBMDEFAULTGROUP 
	 PAGESIZE 4096 MANAGED BY DATABASE
	 USING (FILE 'peopletabspace4k' 19200) 
	 AUTORESIZE YES
	 INCREASESIZE 20 M 
	 MAXSIZE NONE 
	 EXTENTSIZE 32
	 PREFETCHSIZE AUTOMATIC
	 BUFFERPOOL BPOOL4K	 
	 NO FILE SYSTEM CACHING  
	 DROPPED TABLE RECOVERY ON;


CREATE TEMPORARY TABLESPACE TEMPSPACE4K IN DATABASE PARTITION GROUP IBMTEMPGROUP 
	 PAGESIZE 4096 MANAGED BY AUTOMATIC STORAGE 
	 EXTENTSIZE 32
	 PREFETCHSIZE AUTOMATIC
	 BUFFERPOOL BPOOL4K
	 NO FILE SYSTEM CACHING ;

CREATE LARGE TABLESPACE USERSPACE32K IN DATABASE PARTITION GROUP IBMDEFAULTGROUP 
	 PAGESIZE 32768 MANAGED BY DATABASE
	 USING (FILE 'peopletabspace32k' 19200) 
	 AUTORESIZE YES
	 INCREASESIZE 20 M 
	 MAXSIZE NONE 
	 EXTENTSIZE 32
	 PREFETCHSIZE AUTOMATIC
	 BUFFERPOOL BPOOL32K	 
	 NO FILE SYSTEM CACHING  
	 DROPPED TABLE RECOVERY ON;


CREATE TEMPORARY TABLESPACE TEMPSPACE32K IN DATABASE PARTITION GROUP IBMTEMPGROUP 
	 PAGESIZE 32768 MANAGED BY AUTOMATIC STORAGE 
	 EXTENTSIZE 32
	 PREFETCHSIZE AUTOMATIC
	 BUFFERPOOL BPOOL32K
	 NO FILE SYSTEM CACHING ;

------------------------------------------------
-- DDL Statements for schema EMPINST
------------------------------------------------
 CREATE SCHEMA EMPINST;

------------------------------------------------
-- DDL Statements for table "EMPINST "."GIVEN_NAME"
------------------------------------------------
 
 CREATE TABLE "EMPINST "."GIVEN_NAME"  (
		  "PROF_UID" VARCHAR(36) NOT NULL , 
		  "PROF_GIVENNAME" VARCHAR(128) NOT NULL )
		  IN USERSPACE4K INDEX IN USERSPACE4K;
-- DDL Statements for indexes on Table "EMPINST "."GIVEN_NAME"

CREATE INDEX "EMPINST "."GIVEN_NAMEX" ON "EMPINST "."GIVEN_NAME" 
		("PROF_UID" ASC) ;

CREATE INDEX "EMPINST "."GIVEN_NAME_IDX" ON "EMPINST "."GIVEN_NAME" 
		("PROF_GIVENNAME" ASC) ;
		
CREATE INDEX "EMPINST "."GIVEN_NAME_IDX2" ON "EMPINST "."GIVEN_NAME" 
		("PROF_GIVENNAME" ASC, "PROF_UID" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."GIVEN_NAME_WIZ1" ON "EMPINST "."GIVEN_NAME" 
		("PROF_UID" DESC,
		 "PROF_GIVENNAME" DESC) ALLOW REVERSE SCANS;



------------------------------------------------
-- DDL Statements for table "EMPINST "."SURNAME"
------------------------------------------------
 
 CREATE TABLE "EMPINST "."SURNAME"  (
		  "PROF_UID" VARCHAR(36) NOT NULL , 
		  "PROF_SURNAME" VARCHAR(128) NOT NULL ) 
		  IN USERSPACE4K INDEX IN USERSPACE4K;
-- DDL Statements for indexes on Table "EMPINST "."SURNAME"

CREATE INDEX "EMPINST "."SURNAMEX" ON "EMPINST "."SURNAME" 
		("PROF_UID" ASC) ;

CREATE INDEX "EMPINST "."SURNAME_IDX" ON "EMPINST "."SURNAME" 
		("PROF_SURNAME" ASC) ;

CREATE INDEX "EMPINST "."SURNAME_UID_IDX" ON "EMPINST "."SURNAME" 
		("PROF_SURNAME" ASC, "PROF_UID" ASC) ;

CREATE INDEX "EMPINST "."SURNAME_WIZ1" ON "EMPINST "."SURNAME" 
		("PROF_UID" DESC,
		 "PROF_SURNAME" DESC) ALLOW REVERSE SCANS;

------------------------------------------------
-- DDL Statements for table "EMPINST "."COMMON_NAME"
------------------------------------------------
 
 CREATE TABLE "EMPINST "."COMMON_NAME"  (
		  "PROF_UID" VARCHAR(36) NOT NULL , 
		  "PROF_COMMON_NAME" VARCHAR(256) NOT NULL ) 
		  IN USERSPACE4K INDEX IN USERSPACE4K;
-- DDL Statements for indexes on Table "EMPINST "."COMMON_NAME"

CREATE INDEX "EMPINST "."COMMON_NAMEX" ON "EMPINST "."COMMON_NAME" 
		("PROF_UID" ASC) ;

CREATE INDEX "EMPINST "."COMMON_NAME_IDX" ON "EMPINST "."COMMON_NAME" 
		("PROF_COMMON_NAME" ASC) ;


CREATE INDEX "EMPINST "."COMMON_NAME_WIZ1" ON "EMPINST "."COMMON_NAME" 
 		("PROF_UID" DESC,
 		 "PROF_COMMON_NAME" DESC) ALLOW REVERSE SCANS;
 		 
------------------------------------------------
-- DDL Statements for table "EMPINST "."PROFILE_EXTENSIONS"
------------------------------------------------
 
CREATE TABLE "EMPINST "."PROFILE_EXTENSIONS"  (
		  "PROF_UID" VARCHAR(36) NOT NULL ,
		  "PROF_KEY" VARCHAR(256) NOT NULL ,
		  "PROF_NAME" VARCHAR(256) ,
		  "PROF_PROPERTY_ID" VARCHAR(64) ,  
		  "PROF_DATA_TYPE" VARCHAR(64) ,   
		  "PROF_VALUE" VARCHAR(256)) 
		  IN USERSPACE4K INDEX IN USERSPACE4K;

CREATE INDEX "EMPINST "."PROFILE_EXTENSIONS_IDX" ON "EMPINST "."PROFILE_EXTENSIONS" 
		("PROF_UID" ASC) ALLOW REVERSE SCANS;

------------------------------------------------
-- DDL Statements for sequence for Table "EMPINST "."PROFILE_EXT_DRAFT"
------------------------------------------------

CREATE SEQUENCE "EMPINST "."EXT_DRAFT_SEQ";

------------------------------------------------
-- DDL Statements for sequence for Table "EMPINST "."PROFILE_EXT_DRAFT"
------------------------------------------------
CREATE TABLE "EMPINST "."PROFILE_EXT_DRAFT"  (
		  "PROF_UPDATE_SEQUENCE" INTEGER NOT NULL,
		  "PROF_UID" VARCHAR(36) NOT NULL ,
		  "PROF_KEY" VARCHAR(256) NOT NULL ,
		  "PROF_NAME" VARCHAR(256) ,
		  "PROF_PROPERTY_ID" VARCHAR(64) ,  
		  "PROF_DATA_TYPE" VARCHAR(64) ,   
		  "PROF_VALUE" VARCHAR(256)) 
		  IN USERSPACE4K INDEX IN USERSPACE4K;

-- DDL Statements for triggers on Table "EMPINST "."PROFILE_EXT_DRAFT"
CREATE TRIGGER "EMPINST "."T_EXT_DRAFT_SEQ" NO CASCADE BEFORE INSERT ON "EMPINST "."PROFILE_EXT_DRAFT" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATE_SEQUENCE = NEXTVAL FOR "EMPINST "."EXT_DRAFT_SEQ";

-- DDL Statements for indexes on Table "EMPINST "."PROFILE_EXT_DRAFT"

CREATE UNIQUE INDEX "EMPINST "."EXT_DRAFT_PK" ON "EMPINST "."PROFILE_EXT_DRAFT" 
		("PROF_UID" ASC, "PROF_UPDATE_SEQUENCE" ASC) ;

------------------------------------------------
-- DDL Statements for table "EMPINST "."PEOPLE_TAG"
------------------------------------------------
CREATE TABLE "EMPINST "."PEOPLE_TAG" (
      "PROF_TAG_ID" INTEGER GENERATED ALWAYS AS IDENTITY UNIQUE,
	  "PROF_EMP_UID" VARCHAR(36) NOT NULL,
	  "PROF_TAG" VARCHAR(256) NOT NULL,
	  CONSTRAINT "PK" PRIMARY KEY (PROF_EMP_UID, PROF_TAG)) 
	  IN USERSPACE4K INDEX IN USERSPACE4K;

-- DDL Statements for indexes on Table "EMPINST "."PEOPLE_TAG"

CREATE INDEX "EMPINST "."PEOPLE_TAG_IDX" ON "EMPINST "."PEOPLE_TAG" 
		("PROF_TAG" ASC, "PROF_EMP_UID" ASC) ;

------------------------------------------------
-- DDL Statements for table "EMPINST "."DEPARTMENT"
------------------------------------------------
 
 CREATE TABLE "EMPINST "."DEPARTMENT"  (
		  "PROF_DEPARTMENT_CODE" VARCHAR(16) NOT NULL PRIMARY KEY, 
		  "PROF_DEPARTMENT_TITLE" VARCHAR(256)) 
		  IN USERSPACE4K INDEX IN USERSPACE4K; 
-- DDL Statements for indexes on Table "EMPINST "."DEPARTMENT"

 CREATE INDEX "EMPINST "."DEPARTMENT_WIZ1" ON "EMPINST "."DEPARTMENT" 
		("PROF_DEPARTMENT_TITLE" ASC) ALLOW REVERSE SCANS;

------------------------------------------------
-- DDL Statements for table "EMPINST "."ORGANIZATION"
------------------------------------------------
 
 CREATE TABLE "EMPINST "."ORGANIZATION"  (
		  "PROF_ORGANIZATION_CODE" VARCHAR(64) NOT NULL PRIMARY KEY, 
		  "PROF_ORGANIZATION_TITLE" VARCHAR(256)) 
		  IN USERSPACE4K INDEX IN USERSPACE4K; 
-- DDL Statements for indexes on Table "EMPINST "."ORGANIZATION"

 CREATE INDEX "EMPINST "."ORGANIZATION_WIZ1" ON "EMPINST "."ORGANIZATION" 
		("PROF_ORGANIZATION_TITLE" ASC) ALLOW REVERSE SCANS;

------------------------------------------------
-- DDL Statements for table "EMPINST "."COUNTRY"
------------------------------------------------

CREATE TABLE "EMPINST "."COUNTRY"  (
		  "PROF_ISO_COUNTRY_CODE" VARCHAR(3) NOT NULL PRIMARY KEY, 
		  "PROF_COUNTRY_DESC" VARCHAR(256))  
		  IN USERSPACE4K INDEX IN USERSPACE4K; 
-- DDL Statements for indexes on Table "EMPINST "."COUNTRY"

 CREATE INDEX "EMPINST "."COUNTRY_WIZ1" ON "EMPINST "."COUNTRY" 
		("PROF_COUNTRY_DESC" ASC) ALLOW REVERSE SCANS;


------------------------------------------------
-- DDL Statements for table "EMPINST "."EMP_TYPE"
------------------------------------------------
 
 CREATE TABLE "EMPINST "."EMP_TYPE"  (
		  "PROF_EMPLOYEE_TYPE" VARCHAR(256) NOT NULL PRIMARY KEY, 
		  "PROF_EMPLOYEE_DESC" VARCHAR(256)) 
		  IN USERSPACE4K INDEX IN USERSPACE4K;


------------------------------------------------
-- DDL Statements for table "EMPINST "."EMPLOYEE"
------------------------------------------------
 
 CREATE TABLE "EMPINST "."EMPLOYEE"  (
		  "PROF_UID" VARCHAR(36) NOT NULL ,
		  "PROF_SOURCE_UID" VARCHAR(256) NOT NULL,
		  "PROF_GUID" VARCHAR(36) NOT NULL,
		  "PROF_BUILDING_IDENTIFIER" VARCHAR(16) ,
          "PROF_ORGANIZATION_IDENTIFIER" VARCHAR(64) ,
		  "PROF_ISO_COUNTRY_CODE" VARCHAR(3) ,
		  "PROF_DEPARTMENT_NUMBER" VARCHAR(16) ,
          "PROF_DISPLAY_NAME" VARCHAR(256) ,
		  "PROF_EMPLOYEE_TYPE" VARCHAR(256) ,
	      "PROF_DESCRIPTION" VARCHAR(2000) ,
          "PROF_EXPERIENCE" VARCHAR(2000),
		  "PROF_MAIL" VARCHAR(64) ,
          "PROF_MAIL_LOWER" GENERATED ALWAYS AS (LOWER(PROF_MAIL)),
		  "PROF_FAX_TELEPHONE_NUMBER" VARCHAR(32) ,
		  "PROF_FLOOR" VARCHAR(16) ,
		  "PROF_EMPLOYEE_NUMBER" VARCHAR(16) ,
          "PROF_IS_MANAGER" CHAR(1) ,
		  "PROF_JOB_RESPONSIBILITIES" VARCHAR(128) ,
		  "PROF_LAST_UPDATE" TIMESTAMP ,
		  "PROF_MOBILE" VARCHAR(32) ,
          "PROF_MANAGER_UID" VARCHAR(36) ,
		  "PROF_GROUPWARE_EMAIL" VARCHAR(128) ,
		  "PROF_PAGER_TYPE" VARCHAR(16) ,
		  "PROF_PAGER" VARCHAR(32) ,
		  "PROF_PAGER_ID" VARCHAR(32) ,
		  "PROF_PAGER_SERVICE_PROVIDER" VARCHAR(50) ,
		  "PROF_PHYSICAL_DELIVERY_OFFICE" VARCHAR(32) ,
		  "PROF_ALTERNATE_LAST_NAME" VARCHAR(64) ,
		  "PROF_PREFERRED_FIRST_NAME" VARCHAR(32) ,
		  "PROF_PREFERRED_LAST_NAME" VARCHAR(64) ,
		  "PROF_PREFERRED_LANGUAGE" VARCHAR(100) ,
          "PROF_SECRETARY_UID" VARCHAR(36) ,
		  "PROF_SHIFT" VARCHAR(4) ,
		  "PROF_TITLE" VARCHAR(256) ,
          "PROF_COURTESY_TITLE" VARCHAR(64) ,
		  "PROF_TIMEZONE" VARCHAR(50) , 
		  "PROF_TELEPHONE_NUMBER" VARCHAR(32) ,
		  "PROF_WORK_LOCATION" VARCHAR(32) ,
		  "PROF_NATIVE_LAST_NAME" VARCHAR(256) ,
		  "PROF_NATIVE_FIRST_NAME" VARCHAR(256) ,
		  "PROF_BLOG_URL" VARCHAR(256) ,
		  "PROF_FREEBUSY_URL" VARCHAR(256) ,
          "PROF_CALENDAR_URL" VARCHAR(256) ,
		  "PROF_IP_TELEPHONE_NUMBER" VARCHAR(32) )
          IN "USERSPACE32K" INDEX IN USERSPACE4K ;

-- DDL Statements for indexes on Table "EMPINST "."EMPLOYEE"

CREATE UNIQUE INDEX "EMPINST "."EMPLOYEE_PK" ON "EMPINST "."EMPLOYEE" 
		("PROF_UID" ASC) ALLOW REVERSE SCANS;

-- DDL Statements for indexes on Table "EMPINST "."EMPLOYEE"

CREATE INDEX "EMPINST "."EMP_GUID_IDX" ON "EMPINST "."EMPLOYEE" 
		("PROF_GUID" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."MAIL_IDX" ON "EMPINST "."EMPLOYEE" 
		("PROF_MAIL" ASC) ALLOW REVERSE SCANS;	

CREATE INDEX "EMPINST "."MAIL_LOWER_IDX" ON "EMPINST "."EMPLOYEE" 
		("PROF_MAIL_LOWER" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."PREF_FNX" ON "EMPINST "."EMPLOYEE" 
		("PROF_PREFERRED_FIRST_NAME" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."PREF_LNX" ON "EMPINST "."EMPLOYEE" 
		("PROF_PREFERRED_LAST_NAME" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."DISPNMX" ON "EMPINST "."EMPLOYEE" 
		("PROF_DISPLAY_NAME" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."MGRIDX" ON "EMPINST "."EMPLOYEE" 
		("PROF_MANAGER_UID" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."GRPEMAIL_IDX" ON "EMPINST "."EMPLOYEE" 
		("PROF_GROUPWARE_EMAIL" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."JOB_RESP_UID_IDX" ON "EMPINST "."EMPLOYEE" 
		("PROF_JOB_RESPONSIBILITIES", "PROF_UID");

CREATE INDEX "EMPINST "."ORG_UID_IDX" ON "EMPINST "."EMPLOYEE" 
		("PROF_ORGANIZATION_IDENTIFIER", "PROF_UID");

CREATE INDEX "EMPINST "."COUNTRY_UID_IDX" ON "EMPINST "."EMPLOYEE" 
		("PROF_ISO_COUNTRY_CODE", "PROF_UID");
		
CREATE INDEX "EMPINST "."FAX_IDX" ON "EMPINST "."EMPLOYEE"
                ("PROF_FAX_TELEPHONE_NUMBER" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."IPPHONE_IDX" ON "EMPINST "."EMPLOYEE"
                ("PROF_IP_TELEPHONE_NUMBER" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."MOBILE_IDX" ON "EMPINST "."EMPLOYEE"
                ("PROF_MOBILE" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."PAGER_IDX" ON "EMPINST "."EMPLOYEE"
                ("PROF_PAGER" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."PHONE_IDX" ON "EMPINST "."EMPLOYEE"
                ("PROF_TELEPHONE_NUMBER" ASC) ALLOW REVERSE SCANS;
                
CREATE INDEX "EMPINST "."WORKLOC_IDX" ON "EMPINST "."EMPLOYEE"
                ("PROF_WORK_LOCATION" ASC) ALLOW REVERSE SCANS;
                           
		
-- DDL Statements for triggers on Table "EMPINST "."EMPLOYEE"

CREATE TRIGGER "EMPINST "."T_EMPLOYEE_INSRT" NO CASCADE BEFORE INSERT ON "EMPINST "."EMPLOYEE" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_LAST_UPDATE = CURRENT TIMESTAMP;

CREATE TRIGGER "EMPINST "."T_EMPLOYEE_UPDT" NO CASCADE BEFORE UPDATE ON "EMPINST "."EMPLOYEE" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_LAST_UPDATE = CURRENT TIMESTAMP;

------------------------------------------------
-- DDL Statements for table "EMPINST "."PHOTO"
------------------------------------------------
 
 CREATE TABLE "EMPINST "."PHOTO"  (
		  "PROF_UID" VARCHAR(36) NOT NULL , 
		  "PROF_IMAGE" BLOB(50000) NOT LOGGED NOT COMPACT ,
		  "PROF_FILE_TYPE" VARCHAR(50) , 
		  "PROF_UPDATED" TIMESTAMP NOT NULL ) ; 
-- DDL Statements for indexes on Table "EMPINST "."PHOTO"

CREATE INDEX "EMPINST "."PHOTOIDX" ON "EMPINST "."PHOTO" 
		("PROF_UPDATED" DESC) ALLOW REVERSE SCANS;

-- DDL Statements for indexes on Table "EMPINST "."PHOTO"

CREATE UNIQUE INDEX "EMPINST "."PHOTO_PK" ON "EMPINST "."PHOTO" 
		("PROF_UID" ASC) ;

-- DDL Statements for triggers on Table "EMPINST "."PHOTO"
CREATE TRIGGER "EMPINST "."T_PHOTO_INSRT" NO CASCADE BEFORE INSERT ON "EMPINST "."PHOTO" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATED = CURRENT TIMESTAMP;

CREATE TRIGGER "EMPINST "."T_PHOTO_UPDT" NO CASCADE BEFORE UPDATE ON "EMPINST "."PHOTO" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATED = CURRENT TIMESTAMP;

------------------------------------------------
-- DDL Statements for table "EMPINST "."PRONUNCIATION"
------------------------------------------------
 
 CREATE TABLE "EMPINST "."PRONUNCIATION"  (
		  "PROF_UID" VARCHAR(36) NOT NULL , 
		  "PROF_PRONOUNCE" BLOB(100000) NOT LOGGED NOT COMPACT , 
		  "PROF_UPDATED" TIMESTAMP NOT NULL ) ; 

-- DDL Statements for indexes on Table "EMPINST "."PRONUNCIATION"

CREATE INDEX "EMPINST "."PRONOUNCEIDX" ON "EMPINST "."PRONUNCIATION" 
		("PROF_UPDATED" DESC) ALLOW REVERSE SCANS;

-- DDL Statements for indexes on Table "EMPINST "."PRONUNCIATION"

CREATE UNIQUE INDEX "EMPINST "."PRONOUNCE_PK" ON "EMPINST "."PRONUNCIATION" 
		("PROF_UID" ASC) ;

-- DDL Statements for triggers on Table "EMPINST "."PRONUNCIATION"
CREATE TRIGGER "EMPINST "."T_PRONOUNCE_INSRT" NO CASCADE BEFORE INSERT ON "EMPINST "."PRONUNCIATION" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATED = CURRENT TIMESTAMP;

CREATE TRIGGER "EMPINST "."T_PRONOUNCE_UPDT" NO CASCADE BEFORE UPDATE ON "EMPINST "."PRONUNCIATION" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATED = CURRENT TIMESTAMP;


------------------------------------------------
-- DDL Statements for table "EMPINST "."WORKLOC"
------------------------------------------------
 
 CREATE TABLE "EMPINST "."WORKLOC"  (
		  "PROF_WORK_LOC" VARCHAR(32) NOT NULL , 
		  "PROF_ADDRESS1" VARCHAR(256) , 
		  "PROF_ADDRESS2" VARCHAR(256) , 
		  "PROF_CITY" VARCHAR(128) , 
		  "PROF_STATE" VARCHAR(16) , 
		  "PROF_POSTAL_CODE" VARCHAR(16)) 
		  IN USERSPACE4K INDEX IN USERSPACE4K; 
-- DDL Statements for indexes on Table "EMPINST "."WORKLOC"

CREATE UNIQUE INDEX "EMPINST "."WORKLOC_PK" ON "EMPINST "."WORKLOC" 
		("PROF_WORK_LOC" ASC) ;

------------------------------------------------
-- DDL Statements for sequence for Table "EMPINST "."EMP_DRAFT"
------------------------------------------------

CREATE SEQUENCE "EMPINST "."EMP_DRAFT_SEQ";

------------------------------------------------
-- DDL Statements for sequence for Table "EMPINST "."EMP_DRAFT"
------------------------------------------------
CREATE TABLE "EMPINST "."EMP_DRAFT"  (
		  "PROF_UPDATE_SEQUENCE" INTEGER NOT NULL,
		  "PROF_UID" VARCHAR(36) NOT NULL ,
		  "PROF_GUID" VARCHAR(36),
          "PROF_SOURCE_UID" VARCHAR(256),
		  "PROF_BUILDING_IDENTIFIER" VARCHAR(16) ,
          "PROF_ORGANIZATION_IDENTIFIER" VARCHAR(64) ,
		  "PROF_ISO_COUNTRY_CODE" VARCHAR(3) ,
		  "PROF_DEPARTMENT_NUMBER" VARCHAR(16) ,
          "PROF_DISPLAY_NAME" VARCHAR(256) ,
          "PROF_DESCRIPTION" VARCHAR(2000) ,
          "PROF_EXPERIENCE" VARCHAR(2000) ,
		  "PROF_EMPLOYEE_TYPE" VARCHAR(256) ,
		  "PROF_MAIL" VARCHAR(64) ,
		  "PROF_FAX_TELEPHONE_NUMBER" VARCHAR(32) ,
		  "PROF_FLOOR" VARCHAR(16) ,
		  "PROF_EMPLOYEE_NUMBER" VARCHAR(16) ,
          "PROF_IS_MANAGER" CHAR(1) ,
		  "PROF_JOB_RESPONSIBILITIES" VARCHAR(128) ,
		  "PROF_LAST_UPDATE" TIMESTAMP ,
		  "PROF_MOBILE" VARCHAR(32) ,
          "PROF_MANAGER_UID" VARCHAR(36) ,
		  "PROF_GROUPWARE_EMAIL" VARCHAR(128) ,
		  "PROF_PAGER_TYPE" VARCHAR(16) ,
		  "PROF_PAGER" VARCHAR(32) ,
		  "PROF_PAGER_ID" VARCHAR(32) ,
		  "PROF_PAGER_SERVICE_PROVIDER" VARCHAR(50) ,
		  "PROF_PHYSICAL_DELIVERY_OFFICE" VARCHAR(32) ,
		  "PROF_ALTERNATE_LAST_NAME" VARCHAR(64) ,
		  "PROF_PREFERRED_FIRST_NAME" VARCHAR(32) ,
		  "PROF_PREFERRED_LAST_NAME" VARCHAR(64) ,
		  "PROF_PREFERRED_LANGUAGE" VARCHAR(100) ,
          "PROF_SECRETARY_UID" VARCHAR(36) ,
		  "PROF_SHIFT" VARCHAR(4) ,
		  "PROF_TITLE" VARCHAR(256) ,
          "PROF_COURTESY_TITLE" VARCHAR(64) ,
		  "PROF_TIMEZONE" VARCHAR(50) ,
		  "PROF_TELEPHONE_NUMBER" VARCHAR(32) ,
		  "PROF_WORK_LOCATION" VARCHAR(32) ,
		  "PROF_NATIVE_LAST_NAME" VARCHAR(256) , 
		  "PROF_NATIVE_FIRST_NAME" VARCHAR(256) ,
		  "PROF_BLOG_URL" VARCHAR(256) ,
		  "PROF_FREEBUSY_URL" VARCHAR(256) ,
          "PROF_CALENDAR_URL" VARCHAR(256) ,
		  "PROF_IP_TELEPHONE_NUMBER" VARCHAR(32), 
		  CONSTRAINT "PK" PRIMARY KEY (PROF_UPDATE_SEQUENCE, PROF_UID) )
          IN "USERSPACE32K" INDEX IN USERSPACE4K ;

-- DDL Statements for triggers on Table "EMPINST "."EMP_DRAFT"
CREATE TRIGGER "EMPINST "."T_EMP_DRAFT_SEQ" NO CASCADE BEFORE INSERT ON "EMPINST "."EMP_DRAFT" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATE_SEQUENCE = NEXTVAL FOR "EMPINST "."EMP_DRAFT_SEQ";

-- DDL Statements for indexes on Table "EMPINST "."EMP_DRAFT"

CREATE UNIQUE INDEX "EMPINST "."EMP_DRAFT_PK" ON "EMPINST "."EMP_DRAFT" 
		("PROF_UID" ASC, "PROF_UPDATE_SEQUENCE" ASC) ;

-- DDL Statements for indexes on Table "EMPINST "."EMP_DRAFT"

CREATE INDEX "EMPINST "."ED_MAIL" ON "EMPINST "."EMP_DRAFT" 
		("PROF_MAIL" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."ED_PREF_FNX" ON "EMPINST "."EMP_DRAFT" 
		("PROF_PREFERRED_FIRST_NAME" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."ED_PREF_LNX" ON "EMPINST "."EMP_DRAFT" 
		("PROF_PREFERRED_LAST_NAME" ASC) ALLOW REVERSE SCANS;

CREATE INDEX "EMPINST "."ED_DISPNMX" ON "EMPINST "."EMP_DRAFT" 
		("PROF_DISPLAY_NAME" ASC) ALLOW REVERSE SCANS;

-- DDL Statements for Table "EMPINST "."CHG_EMP_DRAFT"

CREATE TABLE "EMPINST "."CHG_EMP_DRAFT" ( 
	IBMSNAP_COMMITSEQ INTEGER, 
	IBMSNAP_INTENTSEQ INTEGER, 
	IBMSNAP_LOGMARKER DATE, 
	IBMSNAP_OPERATION CHAR,
	PROF_UPDATE_SEQUENCE INTEGER NOT NULL,
	PROF_UID VARCHAR(36) NOT NULL)
    IN USERSPACE4K INDEX IN USERSPACE4K;

-- DDL Statements for sequence for Table "EMPINST "."CHG_EMP_DRAFT_SEQ"

CREATE SEQUENCE "EMPINST "."CHG_EMP_DRAFT_SEQ";

-- DDL Statements for triggers for Table "EMPINST "."CHG_EMP_DRAFT"

CREATE TRIGGER "EMPINST "."T_EMP_INS" AFTER INSERT ON "EMPINST "."EMP_DRAFT" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 INSERT INTO "EMPINST "."CHG_EMP_DRAFT" VALUES (NEXTVAL FOR "EMPINST "."CHG_EMP_DRAFT_SEQ", 0, 
			CURRENT_DATE, 'I', N.PROF_UPDATE_SEQUENCE, N.PROF_UID );

CREATE TRIGGER "EMPINST "."T_EMP_DEL" AFTER DELETE ON "EMPINST "."EMP_DRAFT" REFERENCING OLD AS N 
	FOR EACH ROW MODE DB2SQL
		 INSERT INTO "EMPINST "."CHG_EMP_DRAFT" VALUES (NEXTVAL FOR "EMPINST "."CHG_EMP_DRAFT_SEQ", 0, 
			CURRENT_DATE, 'D', N.PROF_UPDATE_SEQUENCE, N.PROF_UID );

CREATE TRIGGER "EMPINST "."T_EMP_UPD" AFTER UPDATE ON "EMPINST "."EMP_DRAFT" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 INSERT INTO "EMPINST "."CHG_EMP_DRAFT" VALUES (NEXTVAL FOR "EMPINST "."CHG_EMP_DRAFT_SEQ", 0, 
			CURRENT_DATE, 'U', N.PROF_UPDATE_SEQUENCE, N.PROF_UID );

UPDATE DB CFG FOR PEOPLEDB USING AUTO_RUNSTATS OFF;

BIND @db2cli.lst ACTION REPLACE REOPT ALWAYS COLLECTION EMPINST;

COMMIT WORK;

CONNECT RESET;

TERMINATE;

